package com.book.service;

import java.util.List;

import javax.transaction.Transactional;

import com.book.domain.Member;
import com.book.repository.MemberRepository;

@Transactional
public class MemberService {
	
	private final MemberRepository memberRepository;
	String username;
	String password;
	
	
	public MemberService(MemberRepository memberRepository) {
		this.memberRepository = memberRepository;
	}

	//회원가입
	public Long join(Member member) {
		memberRepository.save(member);
		username = member.getUsername();
		password = member.getPassword();
		
		if(username == null) {
			System.out.println("아이디 입력값 없음");
		}
		if(password == null) {
			System.out.println("비밀번호 입력값 없음");
		}
		
		System.out.println("아이디 비밀번호 입력 성공");
		return member.getId();
	}
		
	//로그인
	public boolean login(String username, String password) {

		Member member = memberRepository.findByUsername(username);
		
		if(member == null) {
			System.out.println("아이디 조회 실패");
			return false;
		}
		
//		userName으로 받은 password랑 
//		
//		검색을해서 가져온 패스워드랑 달라
//		
//		false;
//		
//		같으면 ture
		
		if (!member.getPassword().equals(password)) {
			System.out.println("비밀번호 조회 실패");
			return false;
		}
		
		System.out.println("성공");
		return true;
	}
	
	// 전체 회원 목록
	public List<Member> findMembers(){
		return memberRepository.findAll();
	}
	
	//아이디 중복체크
	public void checkUsernameDuplication(String username) {
		boolean usernameDuplicate = memberRepository.existsByUsername(username);
		if(usernameDuplicate) {
			throw new IllegalStateException("이미 존재하는 아이디입니다.");
		}
	}
	
}
